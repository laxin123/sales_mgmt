# Generated by Django 4.2.4 on 2023-10-06 05:01

import app.models
import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('phone_number', models.PositiveIntegerField()),
                ('email', models.CharField(blank=True, max_length=150, null=True)),
                ('name_slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('added_date', models.DateField(auto_now=True)),
                ('nepali_added_date', models.CharField(default='19 Aswin 2080', max_length=200)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Expenses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateField(auto_now=True)),
                ('nepali_create_date', models.CharField(default='19 Aswin 2080', max_length=200)),
                ('expenses_name', models.CharField(max_length=150)),
                ('amount', models.FloatField()),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=150)),
                ('image', models.ImageField(blank=True, null=True, upload_to='productimage/')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProductUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('bill_no', models.PositiveIntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('nepali_create_date', models.CharField(default='19 Aswin 2080', max_length=200)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseParty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('pan_no', models.PositiveIntegerField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('contact_no', models.PositiveIntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('nepali_create_date', models.CharField(default='19 Aswin 2080', max_length=200)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('deleted_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.PositiveIntegerField(blank=True, null=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=150)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('payment_status', models.CharField(blank=True, choices=[('paid', 'Paid'), ('partially_paid', 'Partially Paid'), ('unpaid', 'Unpaid')], max_length=150, null=True)),
                ('total_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('remaining_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('paid_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('nepali_create_date', models.CharField(default='19 Aswin 2080', editable=False, max_length=200)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('modified_date', models.DateField(auto_now=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer', to='app.customer')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('phone_number', models.PositiveIntegerField()),
                ('email', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Toll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('toll_name', models.CharField(max_length=150)),
                ('toll_slug', autoslug.fields.AutoSlugField(editable=False, populate_from='toll_name')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SalesItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField()),
                ('quantity', models.PositiveIntegerField()),
                ('nepali_create_date', models.CharField(default='19 Aswin 2080', max_length=200)),
                ('created_date', models.DateField(auto_now=True)),
                ('modified_date', models.DateField(blank=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_product', to='app.product')),
                ('sales_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_id', to='app.sales')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productunit', to='app.productunit')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_per_unit', models.PositiveBigIntegerField()),
                ('quantity', models.PositiveIntegerField()),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('nepali_create_date', models.CharField(default='19 Aswin 2080', max_length=200)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prod', to='app.product')),
                ('purchaseId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase', to='app.purchase')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='product_unit', to='app.productunit')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='purchase',
            name='party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchaseparty', to='app.seller'),
        ),
        migrations.CreateModel(
            name='InventoryProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_retail', models.FloatField(blank=True, null=True)),
                ('rate_wholesale', models.FloatField()),
                ('rate_manu', models.FloatField(blank=True, null=True)),
                ('created_date', models.DateField(auto_now=True)),
                ('nepali_create_date', models.CharField(default='19 Aswin 2080', max_length=200)),
                ('modified_date', models.DateField(blank=True, null=True)),
                ('deleted_date', models.DateField(blank=True, null=True)),
                ('product_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_product', to='app.product')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='toll',
            field=models.ForeignKey(blank=True, null=app.models.Toll, on_delete=django.db.models.deletion.CASCADE, related_name='customer_toll', to='app.toll'),
        ),
    ]
